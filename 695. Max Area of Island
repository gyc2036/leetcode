class Solution {
public:
    void doDfs(int row, int col, int &count, vector<vector<int>>& grid) {
        count += 1;
        grid[row][col] = 0;
        if(row + 1 < grid.size() && grid[row+1][col] == 1)
            doDfs(row+1, col, count, grid);
        if(row - 1 >= 0 && grid[row-1][col] == 1)
            doDfs(row-1, col, count, grid);
        if(col - 1 >= 0 && grid[row][col-1] == 1)
            doDfs(row, col-1, count, grid);
        if(col + 1 < grid[row].size() && grid[row][col+1] == 1)
            doDfs(row, col+1, count, grid);
    }
    
    int maxAreaOfIsland(vector<vector<int>>& grid) {
        int ans = 0;
        for(int i=0;i<grid.size();i++) {
            for(int j=0;j<grid[i].size();j++) {
                if(grid[i][j] == 1) {
                    int count = 0;
                    doDfs(i, j , count, grid);
                    if(count > ans)
                        ans = count;
                }
            }
        }
        return ans;
    }
};
