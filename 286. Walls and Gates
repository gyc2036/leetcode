class Solution 
{
    public:
    void wallsAndGates(vector<vector<int>>& rooms) 
    {
        int inf=2147483647;
        deque<vector<int>> q;
        deque<int> c;
        set<string> overall;
        for(int i=0;i<rooms.size();i++)
        {
            for(int j=0;j<rooms[i].size();j++)
            {
                if(rooms[i][j]==0)
                {
                    q.push_back({i,j});
                    c.push_back(0);
                }
            }
        }
        while(q.size()>0)
        {
            vector<int> p=q.front();
            int k=c.front();
            q.pop_front();
            c.pop_front();
            int x=p[0];
            int y=p[1];
            rooms[x][y]=k;
            if(x-1>=0&&rooms[x-1][y]==inf)
            {
                string temp=to_string(x-1)+","+to_string(y);
                if(overall.find(temp)==overall.end())
                {
                    q.push_back({x-1,y});
                    c.push_back(k+1);
                    overall.insert(temp);
                }
            }
            if(x+1<rooms.size()&&rooms[x+1][y]==inf)
            {
                string temp=to_string(x+1)+","+to_string(y);
                if(overall.find(temp)==overall.end())
                {
                    q.push_back({x+1,y});
                    c.push_back(k+1);
                    overall.insert(temp);   
                }
            }
            if(y-1>=0&&rooms[x][y-1]==inf)
            {
                string temp=to_string(x)+","+to_string(y-1);
                if(overall.find(temp)==overall.end())
                {
                    q.push_back({x,y-1});
                    c.push_back(k+1);
                    overall.insert(temp);   
                }
            }
            if(y+1<rooms[0].size()&&rooms[x][y+1]==inf)
            {
                string temp=to_string(x)+","+to_string(y+1);
                if(overall.find(temp)==overall.end())
                {
                    q.push_back({x,y+1});
                    c.push_back(k+1);
                    overall.insert(temp);   
                }
            }
        }
    }
};
