class Solution {
public:
   int dp[100001];
    int func(int cur,string &s)
    {
      if(cur == s.length())
            return 1;
        if(s[cur] == '0')
            return 0;
        if(dp[cur] != -1)
            return dp[cur];
        if(cur == s.length()-1)
        {
            if(s[cur] >'0' && s[cur] <='9')
                return 1;
            if(s[cur] == '*')
                return 9;
            return 0;
        }
        long long int  temp=0;
            if(s[cur] == '*')
            {
                long x=func(cur+1,s) %1000000007;
                temp+=9*x;
                 temp=temp%1000000007;
                if(s[cur+1] == '*')
                    {
                        x=func(cur+2,s)%1000000007;
                        temp+=15*x;
                         temp=temp%1000000007;
                       
                    }
                    else
                    {
                        int j=s[cur+1]-'0';
                        for(int i=1;i<3;i++)
                        {
                            if((i*10 + j) < 27)
                            {
                                 temp+=func(cur+2,s);
                                 temp=temp%1000000007;
                            }
                        }
                }
         }
         else
        {
            temp+=func(cur+1,s);
             temp=temp%1000000007;
            int i=s[cur]-'0';
             if(s[cur+1] == '*')
                    {
                        for(int j=1;j<=9;j++)
                        {
                            if(i*10 + j < 27)
                            {
                                temp+=func(cur+2,s);
                                 temp=temp%1000000007;
                            }
                             else
                                break;
                        }
                    }
                    else
                    {
                        int j=s[cur+1]-'0';
                         if(i*10 + j < 27)
                            
                                temp+=func(cur+2,s);
                         temp=temp%1000000007;
                }
        }
        return dp[cur]=temp;
}
    int numDecodings(string s) {
        if(s.length() == 0)
            return 0;
        for(int i=0;i<s.length()+1;i++)
            dp[i]=-1;
        return func(0,s);
        }
};
