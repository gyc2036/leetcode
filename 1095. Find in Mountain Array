 int findInMountainArray(int target, MountainArray &mountainArr) {
        int l=0;
        int h=mountainArr.length()-1;
        while (l<h) {
            int m=l+ (h-l)/2;
            int m1= mountainArr.get(m-1);
            int m2= mountainArr.get(m);
            int m3 = mountainArr.get(m+1);
            if(m>0 && m1< m2 && m< mountainArr.length() && m2>m3){
                l=m;
                break;
            } 
            else if (m1<m2) l=m+1;
            else h=m;
        }
        int index = bs(target, mountainArr, 0, l, true);
        if(mountainArr.get(index) == target) return index;
        else index= bs(target, mountainArr, l, mountainArr.length()-1, false);
        return mountainArr.get(index) == target ? index: -1;
    }
    int bs(int target, MountainArray & A, int l, int h, bool lower) {
        while (l<h) {
            int m=l+ (h-l)/2;
            if(A.get(m) == target) return m;
            if(lower) {
                if (A.get(m) < target) l=m+1;
                else h=m-1;
            }
            else {
                if (A.get(m)< target) h=m-1;
                else l=m+1;
            }
        }
        return l;
    }
