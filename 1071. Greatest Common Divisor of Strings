class Solution {
public:
    string gcdOfStrings(string str1, string str2) {
        int length {min(str1.size(), str2.size())};
        
        while (length != 0)
        {
            if ((str1.size()%length == 0) && (str2.size()%length == 0))
            {
                if (made_of(str1, str1.substr(0, length)) &&
                made_of(str2, str1.substr(0, length)))
                {
                    break;
                }
            }
            --length;
        }
        
        return str1.substr(0, length);
    }
                            
private:
    bool made_of(string original, string substring)
    {
        
        for (string::iterator current_pos {original.begin()}; current_pos != original.end(); current_pos += substring.size())
        {
            if (original.compare(current_pos - original.begin(), substring.size(), substring) != 0)
            {
                return false;
            }
        }
        
        return true;
    }
                            
};
