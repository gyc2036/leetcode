   vector<int> findDiagonalOrder(vector<vector<int>>& matrix) {
        int r = matrix.size();
        vector<int> res;
        if(!r) return res;
        int c = matrix[0].size();
        deque<pair<int,int>> q({pair<int,int>(0,0)});
        bool dir = 1;
        while(!q.empty()) {
            int n = q.size();
            for(int i=0;i<n;i++) 
                if(dir) {
                    auto &p = q.front();
                    res.push_back(matrix[p.first][p.second]);
                    q.pop_front();
                    if(!i && p.first+1<r) q.push_back(make_pair(p.first+1,p.second));
                    if(p.second+1<c) q.push_back(make_pair(p.first,p.second+1));
                } else {
                    auto &p = q.back();
                    res.push_back(matrix[p.first][p.second]);
                    q.pop_back();
                    if(!i && p.second+1<c) q.push_front(make_pair(p.first,p.second+1));
                    if(p.first+1<r) q.push_front(make_pair(p.first+1,p.second));
                }
            dir = !dir;
        }
        return res;
