bool compare(vector<int> a,vector<int> b)
{
    return a[0]<b[0];
}
class Solution 
{
    public:
    string addBoldTag(string s, vector<string>& dict)
    {
        vector<int> total((int)s.length()+1,0);
        vector<int> real((int)s.length()+1,0);
        map<int,set<string>> overall;
        for(int i=0;i<dict.size();i++)
        {
            overall[(int)dict[i].length()].insert(dict[i]);
        }
        for(map<int,set<string>>::iterator it=overall.begin();it!=overall.end();it++)
        {
            for(int i=0;i<(int)s.length()-it->first+1;i++)
            {
                if(it->second.find(s.substr(i,it->first))!=it->second.end())
                {
                    total[i]++;
                    total[i+it->first]--;
                }
            }
        }
        for(int i=0;i<total.size();i++)
        {
            if(i==0)
            {
                real[i]=total[i];
            }
            else
            {
                real[i]=real[i-1]+total[i];            
            }
        }
        vector<int> p1;
        vector<int> p2;
        int f=0;
        for(int i=0;i<real.size();i++)
        {
            if(i==0&&real[i]>0)
            {
                p1.push_back(i);
                f=1;
            }
            else
            {
                if(f==1)
                {
                    if(real[i]==0)
                    {
                        p2.push_back(i);
                        f=0;
                    }
                }
                else
                {
                    if(real[i]==1)
                    {
                        p1.push_back(i);
                        f=1;
                    }
                }
            }
        }
        while(p1.size()>0||p2.size()>0)
        {
            if(p1.size()==0)
            {
                int c=p2.back();
                p2.pop_back();
                s=s.substr(0,c)+"</b>"+s.substr(c);
            }
            else if(p2.size()==0)
            {
                int c=p1.back();
                p1.pop_back();
                s=s.substr(0,c)+"<b>"+s.substr(c);                
            }
            else if(p1.back()>p2.back())
            {
                int c=p1.back();
                p1.pop_back();
                s=s.substr(0,c)+"<b>"+s.substr(c);                
            }
            else
            {
                int c=p2.back();
                p2.pop_back();
                s=s.substr(0,c)+"</b>"+s.substr(c);                
            }
        }
        return s;
    }
};
