/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/
class Solution {
public:
    vector<vector<int>> levelOrder(Node* root) {
        
        if(root == nullptr)
            return {};
        
        vector<vector<int>> res;
        queue<Node*> q;
        q.push(root);
        
        while(!q.empty())
        {
            int count = q.size();
            
            vector<int> temp;
            while(count--)
            {
                Node* n = q.front();
                q.pop();
                
                for(int i=0; i<n->children.size(); i++)
                    q.push(n->children[i]);
                temp.push_back(n->val);
            }
            
            res.push_back(temp);
        }
        
        return res;
    }
};
