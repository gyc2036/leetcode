class Solution {
public:
    struct mycomp{
        bool operator() (const pair<char,int> &a, const pair<char,int> &b)
        {
            return a.second<b.second;
        }
    };
    string frequencySort(string s) {
        map<char,int> hashmap;
        for(int i=0;i<s.length();i++)
        {
            hashmap[s[i]]++;
        }
        priority_queue<pair<char,int>,vector<pair<char,int>>, mycomp> pq;
        map<char,int>::iterator it;
        for(it=hashmap.begin();it!=hashmap.end();it++)
        {
            pq.push(make_pair(it->first,it->second));
        }
        string ans;
        while(!pq.empty())
        {
            pair<char,int> t = pq.top();
            for(int i=0;i<t.second;i++)
            {
                ans+=t.first;
            }
            pq.pop();
        }
        return ans;
    }
};
