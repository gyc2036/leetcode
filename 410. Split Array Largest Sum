class Solution {
public:
    int splitArray(vector<int>& nums, int m) {
        int n = nums.size();
        vector<unsigned> prefix_sum = vector<unsigned>(n);
        prefix_sum[0] = nums[0];
        for (int i = 1; i < n; ++i)
            prefix_sum[i] = prefix_sum[i-1] + nums[i];
        unsigned l = *max_element(nums.begin(), nums.end()), r = prefix_sum[n-1];
        while (l < r) {
            unsigned mid = l + ((r-l) >> 1);
            auto lp = prefix_sum.begin();
            auto rp = prefix_sum.end();
            int base = 0;
            for (int i = 0; i < m; ++i) {
                lp = upper_bound(lp, rp, mid + base);
                if (lp == rp) {
                    r = mid;
                    break;
                }
                if (i == m-1) {
                    l = mid + 1;
                    break;
                }
                base = *(lp-1);
            }
        }
        return l;
    }
};
