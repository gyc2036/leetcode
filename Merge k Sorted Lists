class Solution {
public:
    ListNode* merge(auto *p1, auto *p2) {
        if(p1 and p2) {
            if(p1->val <= p2->val) {
                p1->next = merge(p1->next, p2);
                return p1;
            } else {
                p2->next = merge(p1, p2->next);
                return p2;
            }
        }
        
        return p1 ? p1 : p2;
    }
    
    ListNode* mergeKLists(vector<ListNode*>& lists) {
        queue<ListNode*> q;
        
        q.push(NULL);
        for(auto item: lists) q.push(item);
        
        while(q.size() > 1) {
            auto p1 = q.front();
            q.pop();
            auto p2 = q.front();
            q.pop();
            
            q.push(merge(p1, p2));
        }
        
        return q.front();
    }
};
