class Solution {
public:
	int lengthOfLongestSubstring(string s) {
		unordered_map<char, int> imap;
		
		int i = 0;
		int max = 0;
		while (s[i] != '\0') {
			auto it = imap.find(s[i]);
			if (it == imap.end()) {
				imap[s[i]] = i;
			}
			else {
				max = imap.size() > max ? imap.size() : max;
                i = imap[s[i]];
				imap.clear();
				imap[s[i+1]] = i+1;
                i++;
			}
			i++;
		}
		return imap.size() > max ? imap.size() : max;
	}
};
