vector<int> findRightInterval(vector<vector<int>>& intervals) {
        map<int,int> m;
        int n = intervals.size();
        if(n==0) return {};
        if(n==1) return {-1};
        for(int i=0; i<n; i++) {
            m[ intervals[i][0] ] = i;
        }
        vector<int> res;
        for(int i=0; i<n; i++) {
            auto ub = m.upper_bound(intervals[i][1]);
            if(ub == m.end()) {
                ub--;
                if(ub->first >= intervals[i][1]) res.push_back(ub->second);
                else res.push_back(-1);
            } else {
                auto ub1 = ub;
                ub1--;
                if(ub1->first >= intervals[i][1]) res.push_back(ub1->second);
                else res.push_back(ub->second);
            }
        }
        return res;
    }
