class Solution {
public:
    int largestRectangleArea(vector<int>& heights) {
        stack<int> s;
        s.push(-1);
        int result = 0;
        for(int i = 0; i < heights.size(); i++){
            while(s.top() != -1 && heights[i] <= heights[s.top()]){
                int temp = s.top();
                s.pop();
                result = max(result, (i - s.top() - 1) * heights[temp]);
            }
            s.push(i);
            /*
            if(s.top() == -1){
                s.push(i);
            }else{
                if(heights[s.top()] < heights[i])s.push(i);
                else{
                    while(s.top() != -1 && heights[i] <= heights[s.top()]){
                        result = max(result, (i - s.top() - 1) * heights[s.top()]);
                        s.pop();
                    }
                    s.push(i);
                }
            }
            */
        }
        int current = s.top();
        while(s.top() != -1){
            int temp = s.top();
            s.pop();
            result = max(result, heights[temp] * (current - s.top()));
        }
        return result;
    }
};
