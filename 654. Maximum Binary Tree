class Solution {
public:
    int findMax(const vector<int>& nums, int l, int r){
        int maxindex = l;
        
        for (int i = l; i < r; i++){
            if (nums[i] > nums[maxindex]){
                maxindex = i;
            }
        }
        
        return maxindex;
    }
    
    TreeNode* insertNode(vector<int>& nums, int l, int r){
        if (l == r){
            return NULL;
        }
        int maxindex = findMax(nums, l, r);
        TreeNode * root = new TreeNode(nums[maxindex]);
        
        root->left = insertNode(nums, l, maxindex);
        root->right = insertNode(nums, maxindex+1, r);

        return root;
    }
    
    TreeNode* constructMaximumBinaryTree(vector<int>& nums) {
        return insertNode(nums, 0, nums.size());
    }
};
