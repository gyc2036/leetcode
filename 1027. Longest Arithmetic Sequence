class Solution {
public:
    unordered_map<int,unordered_map<int,int>>dp;
    int longestArithSeqLength(vector<int>& A) {
        int ans = 2;
        for(int i = 0;i < A.size();i++){
            for(int j = i + 1;j < A.size();j++){
                ans = max(ans,2 + f(i,A[j] - A[i],A));
            }
        }
        return ans;
    }
    
    int f(int i,int diff,vector<int>& A){
        if(i < 0) return 0;
        if(dp[i].count(diff)) return dp[i][diff];
        int ans = 0;
        for(int j = i - 1;j >= 0;j--){
            if(A[i] - A[j] == diff) ans = max(ans,1 + f(j,diff,A));
        }
        return dp[i][diff] = ans;
    }
};
