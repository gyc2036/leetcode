class Solution {
public:
    // 
    int bagOfTokensScore(vector<int>& tokens, int P) {
        int length = tokens.size();
        if(length==0) return 0;
   
        sort(tokens.begin(), tokens.end());
        // if P > tokens[0], points at least equals to 1.
        if(tokens[0] > P) return 0;
        int res = 0;
        int j = length-1;
        // greedy
        // when i = 0, now we have 1 points
		// when i > 0, if the coins we have can't afford the tokens[i], 
		// we try to use 1 points  to buy the tokens[j](the last one) to get most coins to buy tokens[i],so points += 0;  
		// when i > 0, if the coins is enough to buy tokens[i], points ++;  
        for(int i=0;i<=j;i++){
            P -= tokens[i];
            if(P>=0)
                res ++;
            else
                P += tokens[j--];
        }
        return res;
       
    }
};
