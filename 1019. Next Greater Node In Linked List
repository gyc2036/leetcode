class Solution {
public:
    ListNode* reverseLL(ListNode* head){
        if(head->next == NULL)
            return head;
        ListNode* newHead = reverseLL(head->next);
        head->next->next = head;
        head->next = NULL;
        return newHead;
    }
    vector<int> nextLargerNodes(ListNode* head) {
        if(head == NULL){
            return {};
        }
        head = reverseLL(head);
        ListNode* curr = head;
        stack<int> st;
        vector<int> ans;
        while(curr != NULL){
            while(!st.empty() && st.top() <= curr->val)
                st.pop();
             if(st.empty()){
                ans.push_back(0);
                st.push(curr->val);
            }else{
                 ans.push_back(st.top());
                 st.push(curr->val);
             }
            curr = curr->next;
        }
        reverse(ans.begin(),ans.end());
        return ans;
    }
};
