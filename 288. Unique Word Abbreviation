class ValidWordAbbr {
public:
  unordered_map<string,unordered_set<string>> abbrev_map;
  ValidWordAbbr(vector<string> dictionary) {
    for(int i=0; i<dictionary.size(); i++){
      if(dictionary[i].size()<3)
	continue;
      abbrev_map[dictionary[i][0]+to_string(dictionary[i].size()-2)+dictionary[i][dictionary[i].size()-1]].insert(dictionary[i]);
    }
  }
  
  bool isUnique(string word) {
    if(abbrev_map[ word[0]+to_string(word.size()-2)+word[word.size()-1] ].size() == 0 )
      return true;
    else{
      if(abbrev_map[ word[0]+to_string(word.size()-2)+word[word.size()-1] ].size() > 1 )
	return false;
      else{ 
	if(abbrev_map[ word[0]+to_string(word.size()-2)+word[word.size()-1] ].count(word) == 1)
	  return true;
	else
	  return false;
      }
    }
  }
};

/**
 * Your ValidWordAbbr object will be instantiated and called as such:
 * ValidWordAbbr obj = new ValidWordAbbr(dictionary);
 * bool param_1 = obj.isUnique(word);
 */
